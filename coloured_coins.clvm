(mod (core parent_info my_amount puzzle_reveal solution (auditor_parent auditor_innerpuz auditor_amount) aggees)

;(defun concat2 (X Y)
;      (if Y
;          (if X
;              (c (f X) (concat2 (r X) Y))
;              Y
;          )
;          X
;      )
;  )

;  (defmacro create_outputs (puzreveal solution)
;      (qq ((c (unquote puzreveal) (unquote solution))))
;  )

  (defmacro create_fullpuz (innerpuzzlehash core)
    (qq (c (q 7) (c (c (q 5) (c (c (q 1) (c (unquote innerpuzzlehash) (q ()))) (c (c (c (q 5) (c (c (q 1) (c (unquote core) (q ()))) (q ((a))))) (q ())) (q ())))) (q ()))))
  )

;  (defmacro new_create_coin (innerpuzzlehash core amount)
;    (qq (list 51 (sha256tree (create_fullpuz (unquote innerpuzzlehash) (unquote core))) (unquote amount)))
;  )

;  (defmacro create_e_puz (auditor_ID output_sum)
;    (qq (c (q #r) (c (c (q #r) (c (c (q #c) (c (c (q #q) (c (unquote auditor_ID) (q ()))) (c (c (q #c) (c (c (q #q) (c (unquote output_sum) (q ()))) (q ((q ()))))) (q ())))) (q ()))) (q ()))))
;  )

;  (defmacro create_e_coin (auditor_ID output_sum)
;    (qq (list 51 (sha256tree (create_e_puz (unquote auditor_ID) (unquote output_sum))) 0))
;  )

;  (defmacro create_a_puz_for_cn (my_ID)
;    (qq (c (q #r) (c (c (q #c) (c (c (q #q) (c (unquote my_ID) (q ()))) (q ((q ()))))) (q ()))))
;  )

;  (defmacro consume_a (my_ID auditor_ID)
;    (qq (c (q 52) (c (sha256 (unquote auditor_ID) (sha256tree (create_a_puz_for_cn (unquote my_ID))) (q 0)) (q ()))))
;  )

;  (defmacro create_auditor_ID ((auditor_parent auditor_innerpuz auditor_amount) core)
;    (qq (sha256 (unquote auditor_parent) (sha256tree (create_fullpuz (unquote auditor_innerpuz) core)) (unquote auditor_amount)))
;  )

;  (defmacro create_my_ID ((parent_parent parent_innerpuz parent_amount) my_innerpuz my_amount core)
;    (qq (sha256 (sha256 (unquote parent_parent) (sha256tree (create_fullpuz (unquote parent_innerpuz) (unquote core))) (unquote parent_amount)) (sha256tree (create_fullpuz (unquote my_innerpuz) (unquote core))) (unquote my_amount)))
;  )

;  (defmacro assert_my_id (my_ID)
;    (qq (c (q 53) (c (unquote my_ID) (q ()))))
;  )

;  (defmacro create_e_consume_a_assert_me (my_ID auditor_ID running_sum)
;    (qq (c (assert_my_id (unquote my_ID)) (c (consume_a (unquote my_ID) (unquote auditor_ID)) (c (create_e_coin (unquote auditor_ID) (unquote running_sum)) (q ())))))
;  )

;  (defun normal_case (loop my_output core running_sum my_ID auditor_ID)
;    (if (l loop)
;      (if (= (f (f loop)) (q 51))
;        (normal_case (r loop) (c (new_create_coin (f (r (f loop))) core (f (r (r (f loop))))) my_output) core (+ (f (r (r (f loop)))) running_sum) my_ID auditor_ID)
;        (normal_case (r loop) (c (f loop) my_output) core running_sum my_ID auditor_ID)
;      )
;      (concat2 (create_e_consume_a_assert_me my_ID auditor_ID running_sum) my_output)
;    )
;  )

  (defun normal_case ARGS
    (q ("this is fake"))
  )

  (defmacro assert_my_parent_is_origin (parent_ID my_fullpuzhash my_amount)
    (qq (c (q 53) (c (sha256 (unquote parent_ID) (unquote my_fullpuzhash) (unquote my_amount)) (q ()))))
  )

  (defmacro assert_my_value_is_zero (parent_ID my_fullpuzhash)
    (qq (c (q 53) (c (sha256 (unquote parent_ID) (unquote my_fullpuzhash) (q 0)) (q ()))))
  )

  (defmacro create_child_with_my_puzzle (my_fullpuzhash my_amount)
    (qq (c (q 51) (c (unquote my_fullpuzhash) (c (unquote my_amount) (q ())))))
  )

  (defmacro eve_case_parent_check (parent_ID my_fullpuzhash my_amount)
    (if (= parent_ID (q "REPLACE_ME_WITH_ORIGIN"))
      (qq (assert_my_parent_is_origin (unquote parent_ID) (unquote my_fullpuzhash)))
      (qq (assert_my_value_is_zero (unquote parent_ID) (unquote my_fullpuzhash)))
    )
  )

  (defmacro eve_case (parent_ID my_fullpuzhash my_amount)
    (qq (c (create_child_with_my_puzzle (unquote my_fullpuzhash) (unquote my_amount)) (c (eve_case_parent_check (unquote parent_ID) (unquote my_fullpuzhash) (unquote my_amount)) (q ()))))
  )

  (if (l parent_info)
      ;(normal_case (create_outputs puzzle_reveal solution) () core 0 (create_my_ID ((f parent_info) (f (r parent_info)) (f (r (r parent_info)))) (sha256tree puzzle_reveal) my_amount core) (create_auditor_ID (auditor_parent auditor_innerpuz auditor_amount) core))
      (normal_case (q ("blah")))
      (eve_case parent_info (sha256tree (create_fullpuz (sha256tree puzzle_reveal) core)) my_amount)
  )

  ;(create_my_ID (parent_parent parent_innerpuz parent_amount) my_innerpuz my_amount core)
  ;(create_auditor_ID (auditor_parent auditor_innerpuz auditor_amount) core)
  ;(create_e_coin ((f (f ARGS)) (f (r (f ARGS))) (f (r (r (f ARGS))))) (f (r ARGS)) 100)
  ;(create_a_puz_cn ((f (f ARGS)) (f (r (f ARGS))) (f (r (r (f ARGS))))) (f (r ARGS)) (f (r (r ARGS))) (f (r (r (r ARGS)))))
  ;(create_e_consume_a_assert_me (create_my_ID (parent_parent parent_innerpuz parent_amount) my_innerpuz my_amount core) (create_auditor_ID (auditor_parent auditor_innerpuz auditor_amount) core) (q 100))
  ;(create_outputs puzzle_reveal solution)
  ;(normal_case (create_outputs puzzle_reveal solution) () core 0 (create_my_ID (parent_parent parent_innerpuz parent_amount) (sha256tree puzzle_reveal) my_amount core) (create_auditor_ID (auditor_parent auditor_innerpuz auditor_amount) core))

)
